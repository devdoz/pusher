name: "Tests"

on:
  push:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'composer.json'

  pull_request:
    paths:
      - 'src'
      - 'tests'

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist"

jobs:
  tests:
    name: "PHP Unit tests"

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      matrix:
        include:
          - php-version: "8.0"
            os: "ubuntu-latest"
            experimental: false
          - php-version: "8.1"
            os: "ubuntu-latest"
            experimental: true
      fail-fast: true

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          extensions: "intl, zip"
          ini-values: "memory_limit=-1, phar.readonly=0, error_reporting=E_ALL, display_errors=On"
          php-version: ${{ matrix.php-version }}
          tools: composer
          
      - name: "Install locked dependencies"
        if: "matrix.experimental == false"
        run: "composer config platform --unset && composer install ${{ env.COMPOSER_FLAGS }}"

      - name: "Install highest dependencies"
        if: "matrix.experimental == true"
        run: "composer config platform --unset && composer update ${{ env.COMPOSER_FLAGS }}"

      - name: "Prepare git environment"
        run: "git config --global user.name pusher && git config --global user.email pusher@example.com"

      - name: "Run PHPUnit tests"
        run: "vendor/bin/phpunit tests --verbose"
        env:
          BarkCustomToken: "${{secrets.BARK_CUSTOM_TOKEN}}"
          BarkCustomURL: "${{secrets.BARK_CUSTOM_URL}}"
          BarkToken: "${{secrets.BARK_TOKEN}}"

          ChanifyCustomToken: "${{secrets.CHANIFY_CUSTOM_TOKEN}}"
          ChanifyCustomURL: "${{secrets.CHANIFY_CUSTOM_URL}}"
          ChanifyToken: "${{secrets.CHANIFY_TOKEN}}"

          DingtalkSecret: "${{secrets.DINGTALK_SECRET}}"
          DingtalkToken: "${{secrets.DINGTALK_TOKEN}}"

          FeishuSecret: "${{secrets.FEISHU_SECRET}}"
          FeishuToken: "${{secrets.FEISHU_TOKEN}}"

          MiaomiaoToken: "${{secrets.MIAOMIAO_TOKEN}}"

          NowPushToken: "${{secrets.NOWPUSH_TOKEN}}"

          PushBackToken: "${{secrets.PUSHBACK_TOKEN}}"

          PushbulletToken: "${{secrets.PUSHBULLET_TOKEN}}"

          PushDeerCustomToken: "${{secrets.PUSHDEER_CUSTOM_TOKEN}}"
          PushDeerCustomURL: "${{secrets.PUSHDEER_CUSTOM_URL}}"
          PushDeerToken: "${{secrets.PUSHDEER_TOKEN}}"

          PushoverToken: "${{secrets.PUSHOVER_TOKEN}}"
          PushoverUserKey: "${{secrets.PUSHOVER_USER_KEY}}"
          PushoverGroupKey: "${{secrets.PUSHOVER_GROUP_KEY}}"

          PushPlusToken: "${{secrets.PUSHPLUS_TOKEN}}"

          PushsaferToken: "${{secrets.PUSHSAFER_TOKEN}}"

          QQBotAppId: "${{secrets.QQBOT_APP_ID}}"
          QQBotChannelId: "${{secrets.QQBOT_CHANNEL_ID}}"
          QQBotToken: "${{secrets.QQBOT_TOKEN}}"

          ServerChanToken: "${{secrets.SERVERCHAN_TOKEN}}"

          ShowdocToken: "${{secrets.SHOWDOC_TOKEN}}"

          TechulusToken: "${{secrets.TECHULUS_TOKEN}}"

          TelegramToken: "${{secrets.TELEGRAM_TOKEN}}"
          TelegramChatId: "${{secrets.TELEGRAM_CHAT_ID}}"

          SMTPFrom: "${{secrets.SMTP_FROM}}"
          SMTPHostPort: "${{secrets.SMTP_HOST_PORT}}"
          SMTPTo: "${{secrets.SMTP_TO}}"
          SMTPUser: "${{secrets.SMTP_USER}}"

          WebhookTokenGet: "${{secrets.WEBHOOK_TOKEN_GET}}"
          WebhookTokenPost: "${{secrets.WEBHOOK_TOKEN_POST}}"
          WebhookTokenPostJSON: "${{secrets.WEBHOOK_TOKEN_POST_JSON}}"

          WeComToken: "${{secrets.WECOM_TOKEN}}"

          WxPusherToken: "${{secrets.WXPUSHER_TOKEN}}"

          XizhiChannelToken: "${{secrets.XIZHI_CHANNEL_TOKEN}}"
          XizhiToken: "${{secrets.XIZHI_TOKEN}}"
